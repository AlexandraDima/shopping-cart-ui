{"version":3,"sources":["Images/Cargo_Train.png","Images/Tower_Crane_Construction.png","Images/Wrecking_Ball_Demolition.png","Images/Creative_animals.png","Images/Modular_Playhouse.png","Images/World_Animals.png","Components/Cart.js","Components/Product.js","Components/Products.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cart","props","onClose","bind","addQuantity","decreaseQuantity","deleteProduct","e","this","id","cart","shift","setState","filter","p","productId","product","find","console","log","increaseQuantity","productQuantity","decreaseQ","q","show","className","children","Modal","dialogClassName","size","Header","Title","onClick","aria-hidden","Body","scope","map","cartProduct","key","productName","productPrice","Component","Product","src","image","alt","name","price","toFixed","addToCart","Products","products","App","showModal","state","Tower_Crane_Construction","Wrecking_Ball_Demolition","Cargo_Train","Creative_animals","Modular_Playhouse","World_Animals","push","reduce","total","cartP","data-count","countCartProduct","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.13f133c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cargo_Train.33ef3952.png\";","module.exports = __webpack_public_path__ + \"static/media/Tower_Crane_Construction.08941e52.png\";","module.exports = __webpack_public_path__ + \"static/media/Wrecking_Ball_Demolition.5a530721.png\";","module.exports = __webpack_public_path__ + \"static/media/Creative_animals.5c788faa.png\";","module.exports = __webpack_public_path__ + \"static/media/Modular_Playhouse.6d41d691.png\";","module.exports = __webpack_public_path__ + \"static/media/World_Animals.f6e4f1bb.png\";","import React, {Component} from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Cart extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.onClose = this.onClose.bind(this); \r\n        this.addQuantity = this.addQuantity.bind(this);\r\n        this.decreaseQuantity = this.decreaseQuantity.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n    }\r\n\r\n    //Close the modal\r\n    onClose(e) {\r\n        this.props.onClose && this.props.onClose(e);\r\n    }; \r\n\r\n    //Delete a product from the Cart\r\n    deleteProduct(id){\r\n        this.props.cart.shift(id);\r\n        this.setState({\r\n           cart: this.props.cart.filter(p => p.productId !== id)\r\n        }) \r\n    }\r\n    \r\n    //Increase quantity\r\n    addQuantity(id){\r\n        let product = this.props.cart.find(product => product.productId === id);\r\n        console.log(product);\r\n        let increaseQuantity = product.productQuantity ++;\r\n            console.log(increaseQuantity);\r\n            this.setState({\r\n                productQuantity: increaseQuantity\r\n            })\r\n        \r\n    } \r\n\r\n    //Decrease quantity\r\n    decreaseQuantity(id){\r\n        let product = this.props.cart.find(q => q.productId === id);\r\n        let decreaseQ = product.productQuantity --;\r\n         this.setState({\r\n            productQuantity: decreaseQ\r\n        })  \r\n    } \r\n\r\n\r\n    render(){\r\n        if(!this.props.show){\r\n            return null;\r\n        }\r\n        return(\r\n            <div className=\"container \">\r\n              {this.props.children}\r\n                <Modal dialogClassName='custom-dialog' show={true} size=\"lg\">\r\n                    <Modal.Header>\r\n                        <Modal.Title><h1>Your cart</h1></Modal.Title>\r\n                        <button className=\"btn closeBtn\" onClick={this.onClose}>Close \r\n                            <i className=\"fa fa-times\" aria-hidden=\"true\" ></i>\r\n                        </button>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <div className=\"row\">\r\n                            <table className=\"table table-responsive mx-auto\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th scope=\"col\">Product</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Price</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            {this.props.cart.map((cartProduct, id) =>\r\n                                <tbody key={cartProduct.productId}>\r\n                                    <tr>\r\n                                    <th scope=\"row\">{cartProduct.productName}</th>\r\n                                    <td className=\" mx-auto\">\r\n                                        <div className=\"row mx-auto\">\r\n                                            <div className=\"col-lg-3 qntPlusClass text-center\" onClick={() => \r\n                                                this.decreaseQuantity(cartProduct.productId)}>-</div>\r\n                                            <div className=\"col-lg-3 inputClass\">\r\n                                            <span className=\"text-center\"> {cartProduct.productQuantity} </span>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 qntMinusClass text-center\" onClick={() => \r\n                                                this.addQuantity(cartProduct.productId)} >+</div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"text-right\">{cartProduct.productPrice}</td>\r\n                                    <td className=\"text-center\"> <i className=\"fa fa-trash greenColor text-center\" aria-hidden=\"true\" onClick={()=> this.deleteProduct(cartProduct)}></i></td>\r\n                                    </tr> \r\n                                </tbody> \r\n                            )}\r\n                            </table>    \r\n                            <hr />\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class Product extends Component{\r\n    render(){\r\n        return(\r\n                <div className=\"card col-lg-4k p-0 m-2 mx-auto shadowContainer\" id={this.props.id}>\r\n                     <img className=\"card-img-top\" src={this.props.image} alt=\"product\" />\r\n                     <div className=\"card-body text-center\">\r\n                         <h5 className=\"card-title\">{this.props.name}</h5>\r\n                         <h6 className=\"card-title\">{this.props.price.toFixed(2)} kr</h6>\r\n                          <button className=\"btn addBtn\" onClick={() => this.props.addToCart(this.props.id, this.props.name, this.props.price)}>Add</button>\r\n                     </div>\r\n                </div>        \r\n              \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Product from './Product';\r\n\r\nexport default class Products extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                 \r\n                 <div className=\"row\">\r\n                    {this.props.products.map(product =>\r\n                    <Product key={product.id} image={product.image} name={product.name} price={product.price} addToCart={()=>this.props.addToCart(product.id, product.name, product.price)} />    \r\n                    )} \r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"fontawesome-4.7/css/font-awesome.min.css\";\nimport Cart from './Components/Cart';\nimport Products from './Components/Products';\nimport Cargo_Train from './Images/Cargo_Train.png'; \nimport Tower_Crane_Construction from './Images/Tower_Crane_Construction.png';\nimport Wrecking_Ball_Demolition from './Images/Wrecking_Ball_Demolition.png';\nimport Creative_animals from './Images/Creative_animals.png';\nimport Modular_Playhouse from './Images/Modular_Playhouse.png';\nimport World_Animals from './Images/World_Animals.png';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.showModal = this.showModal.bind(this);\n    this.state = {\n        products:[\n            {\n                id:1,\n                name: \"Tower Crane & Construction\",\n                image: Tower_Crane_Construction,\n                price: 1099.00\n            },\n            {\n                id:2,\n                name: \"Wrecking Ball Demolition\",\n                image: Wrecking_Ball_Demolition,\n                price: 549.00,\n            },\n            {\n                id:3,\n                name: \"Cargo Train\",\n                image: Cargo_Train,\n                price: 1099.00\n            },\n             {\n                id:4,\n                name: \"Creative Animals\",\n                image: Creative_animals,\n                price: 549.00\n            },\n            {\n                id:5,\n                name: \"Modular Playhouse\",\n                image: Modular_Playhouse,\n                price: 549.00\n            },\n            {\n                id:6,\n                name: \"World Animals\",\n                image: World_Animals,\n                price: 899.00\n            }\n        ], \n        cart:[],\n        show: false\n    }\n  }\n\n    //Add products to the Cart list\n    addToCart(id, name, price){\n      var quantity = 1;\n      //Check if the product is already in the cart\n      let productId = this.state.cart.find(p => p.productId === id);\n      if(productId == null){\n        this.state.cart.push(\n          {\n            productId: id,\n            productName: name,\n            productPrice: price,\n            productQuantity: quantity \n          }\n        );  \n      }  else{\n        productId.productQuantity += quantity;\n      }  \n      \n      //Update the state of the Cart list\n      console.log(this.state.cart);\n      this.setState({\n      cart:this.state.cart\n      })    \n    }  \n\n    //Calculate the total quantity\n    countCartProduct(){\n      let result = this.state.cart.reduce((total,cartP) => total + cartP.productQuantity, 0);\n      return result\n    }\n  \n    //Show the cart modal\n    showModal () {\n      this.setState({\n      show:  !this.state.show\n      });\n    };\n\n  render(){\n    return (\n      <div className=\"container mt-4\">\n        <header>\n          <div className=\"d-flex flex-row-reverse mb-4\">\n            <span className=\"fa-stack fa-2x has-badge \" data-count={this.countCartProduct()} onClick={e => {\n                  this.showModal();}}>\n            <i className=\"fa fa-circle greenColor fa-stack-2x\"></i>\n            <i className=\"fa fa-shopping-cart whiteColor fa-stack-1x blue-cart\"></i>\n            </span>\n          </div>\n          <Cart cart={this.state.cart} products={this.state.products} onClose={this.showModal} show={this.state.show} /> \n        </header>\n\n        <Products products={this.state.products} addToCart={(id, name, price)=>this.addToCart(id, name, price)} /> \n      \n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}